# coding: utf-8

"""
    ABIS REST API

    Innovatrics ABIS proprietary REST API

    The version of the OpenAPI document: 6.62.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Any, ClassVar, Dict, List, Optional
from pydantic import BaseModel, StrictStr, field_validator
from pydantic import Field
try:
    from typing import Self
except ImportError:
    from typing_extensions import Self

class ErrorResponseStandard(BaseModel):
    """
    Error response
    """ # noqa: E501
    error_code: StrictStr = Field(description="<p><code>ABIS-10xxx</code> - general error </p><ul><li><code>ABIS-10001</code> - default error code for all undocumented messages</li><li><code>ABIS-10002</code> - Data service failed to perform ${operationName}</li><li><code>ABIS-10003</code> - Unexpected data service technical update applicant operation null result</li><li><code>ABIS-10005</code> - Timestamp value in invalid format: ${value}</li><li><code>ABIS-10006</code> - Found more than one primary applicant for external id ${externalId}</li><li><code>ABIS-10012</code> - Get applicants DS response contains more than requested applicants</li><li><code>ABIS-10013</code> - Get single applicant DS response contains more than one applicant</li><li><code>ABIS-10014</code> - Unexpected count of applicants returned by get applicant hitlists query</li><li><code>ABIS-10015</code> - Get single applicant with binary data returned more applicants</li><li><code>ABIS-10016</code> - Biometric individual not found for external id ${externalId}</li><li><code>ABIS-10017</code> - Primary applicant not found for external id ${externalId}</li><li><code>ABIS-10018</code> - Unexpected merge applicant operation null result</li><li><code>ABIS-10022</code> - Unknown custom code list field ${fieldName}</li><li><code>ABIS-10023</code> - Applicant id is null for external id: ${externalId}</li><li><code>ABIS-10025</code> - Invalid XML API response ${statusCode} ${statusReason}</li><li><code>ABIS-10026</code> - Found more than one applicant with specified external id ${externalId}</li><li><code>ABIS-10028</code> - Default gallery for create not found</li><li><code>ABIS-10029</code> - More than one gallery '${name}' found</li><li><code>ABIS-10030</code> - More than one default gallery for create found</li><li><code>ABIS-10031</code> - Get applicants DS response contains unexpected number of applicants</li><li><code>ABIS-10032</code> - Unexpected clear all applicants operation false result</li><li><code>ABIS-10033</code> - Unexpected applicant move to gallery operation null result</li><li><code>ABIS-10034</code> - Unexpected applicant end of life operation null result</li><li><code>ABIS-10035</code> - Failed to read/write document page portrait data</li><li><code>ABIS-10036</code> - Failed to download/upload data to MinIo</li><li><code>ABIS-10037</code> - Failed to create export archive</li></ul><p><code>ABIS-20xxx</code> - general request error </p><ul><li><code>ABIS-20001</code> - ${participant} element must be specified</li><li><code>ABIS-20002</code> - SMT characteristic of type [TATTOO] must contain tattoo class and tattoo subclass.</li><li><code>ABIS-20003</code> - Enroll action is missing</li><li><code>ABIS-20004</code> - Enroll action reference external id is not set</li><li><code>ABIS-20005</code> - Only one of id, externalId can be used as ${participant}</li><li><code>ABIS-20006</code> - Request path external id and body external id do not match</li><li><code>ABIS-20007</code> - Failed to deserialize '${value}' as LocalDate</li><li><code>ABIS-20008</code> - Failed to deserialize '${value}' as OffsetDateTime</li><li><code>ABIS-20009</code> - Applicant with latent print can contain only one latent print</li><li><code>ABIS-20010</code> - Applicant with latent print cannot contains other modalities</li><li><code>ABIS-20011</code> - Number of fingerprint entries must be same as in the template. You have ${fingerEntriesCount} fingerprint entries for ${templatePositionsCount} finger(s) in the template</li><li><code>ABIS-20012</code> - Template and entry fingerprint position mismatch at index ${index}. Entry position: ${fingerprintEntryPosition}, template position: ${templatePosition}</li><li><code>ABIS-20013</code> - Number of irises entries must be same as in the template. You have ${irisesEntriesCount} irises entries for ${templatePositionsCount} iris(es) in the template</li><li><code>ABIS-20014</code> - Template and entry iris position mismatch at index ${index}. Entry position: ${irisEntryPosition}, template position: ${templatePosition}</li><li><code>ABIS-20015</code> - Invalid enroll action ${enrollAction}</li><li><code>ABIS-20016</code> - Probe applicant or an applicant specified in gallery not found: ${errorMessage}</li><li><code>ABIS-20017</code> - Error occurred while processing image data in the request: ${errorMessage}</li><li><code>ABIS-20018</code> - Error occurred while validating request: ${xmlApiProcessingResultMessage}</li><li><code>ABIS-20019</code> - Template data in request are not valid!</li><li><code>ABIS_20020</code> - Error occurred while processing image data in the request: ${modality} not detected. ${modality}less strategy set to [${strategy}].</li><li><code>ABIS_20021</code> - Masterize enroll action is supported only with applicant data present in request</li><li><code>ABIS_20022</code> - Cannot use identification masks along with anonymize fingerprint count in identification request</li><li><code>ABIS_20023</code> - Error when parsing HTTP input message, ${error}</li><li><code>ABIS_20024</code> - Cannot parse HTTP input JSON message, unrecognized property ${unrecognizedProperty} specified</li><li><code>ABIS_20025</code> - ${participant} must have at least one modality defined</li><li><code>ABIS_20026</code> - ${participant} is missing ${modality} modality image data</li><li><code>ABIS_20027</code> - ${participant} is missing ${modality} modality template data</li><li><code>ABIS_20028</code> - ${participant} is missing template data</li><li><code>ABIS_20029</code> - Identifier of ${participant} is missing</li><li><code>ABIS_20030</code> - Error occurred while calling [${serviceName}]: ${errorMessage}</li><li><code>ABIS_20031</code> - Unsupported HTTP method '${httpMethod}' used, supported methods: ${supportedHttpMethods}</li><li><code>ABIS_20034</code> - Selfie image is missing</li><li><code>ABIS_20035</code> - Selfie image face not detected</li><li><code>ABIS_20036</code> - The document image is missing</li><li><code>ABIS_20037</code> - The document page type is not specified</li><li><code>ABIS_20038</code> - The document face portrait is missing or undetectable</li><li><code>ABIS_20039</code> - Invalid external id provided: ${externalId}</li><li><code>ABIS_20040</code> - Liveness segments are missing</li><li><code>ABIS_20041</code> - The liveness segment image is missing</li><li><code>ABIS_20042</code> - No face detected in face-capture/liveness-images image</li><li><code>ABIS_20043</code> - Multiple faces detected, only one face should be present in face-capture/liveness-images image</li><li><code>ABIS_20044</code> - Multiple faces detected in selfie image face</li><li><code>ABIS_20045</code> - Non-empty field 'dataBytes' is required for images and templates</li><li><code>ABIS_20046</code> - ${participant} is missing both dna data and identifier. At least one must be provided.</li><li><code>ABIS_20047</code> - Invalid identification parameter provided: ${validationErrorMessage}</li><li><code>ABIS_20048</code> - Invalid verification parameter provided: ${validationErrorMessage}</li><li><code>ABIS_20049</code> - Invalid extraction parameter provided: ${validationErrorMessage}</li><li><code>ABIS_20050</code> - Request payload must be empty for applicant in status: ${status}</li><li><code>ABIS_20051</code> - Request contains invalid applicant gallery for latent identification: ${galleryName}</li><li><code>ABIS_20052</code> - Cannot move applicant to the ${newGalleryName} gallery. Gallery settings for the new gallery are different from the settings for the old gallery ${oldGalleryName}</li><li><code>ABIS_20053</code> - Only one of 'dataBytes' or 'dataUrl' fields can be used for images and templates</li><li><code>ABIS_20054</code> - Detected standard ${detectedStandard} is different than standard ${expectedStandard} provided in the request</li><li><code>ABIS_20055</code> - Provided custom field name ${customFieldName} is not valid for filtering applicants, following values are supported ${supportedCustomFieldNames}</li><li><code>ABIS_20056</code> - Only data URLs from the ABIS API are supported.</li><li><code>ABIS_20057</code> - Encoding required for standard ${standard}</li><li><code>ABIS_20058</code> - Only one of 'dataBytes', 'dataUrl' or 'file' fields can be used</li><li><code>ABIS_20059</code> - File does not exist or is not valid in the storage</li><li><code>ABIS_20060</code> - X-Request-Reason header length exceeds maximum limit</li><li><code>ABIS_20061</code> - The ZIP file contains files with a different standard than standard provided in the request</li><li><code>ABIS_20062</code> - Invalid biometric update archived applicant status specified</li><li><code>ABIS_20063</code> - Cannot change gallery in applicant patch operation</li><li><code>ABIS_20064</code> - Unsupported standard provided in the request</li><li><code>ABIS_20065</code> - No list of applicant external ids provided for export</li><li><code>ABIS_20066</code> - Image is required. Please note that dataUrl is currently not supported and thus dataBytes is mandatory.</li></ul><p><code>ABIS-30xxx</code> - general state error: </p><ul><li><code>ABIS-30001</code> - Applicant not found</li><li><code>ABIS-30002</code> - Some of requested applicants do not exist</li><li><code>ABIS-30003</code> - Fingerprint not found</li><li><code>ABIS-30004</code> - Face not found</li><li><code>ABIS-30005</code> - Iris not found</li><li><code>ABIS-30006</code> - No templates found</li><li><code>ABIS-30008</code> - Fingerprint template not found</li><li><code>ABIS-30009</code> - Fingerprints template not found</li><li><code>ABIS-30010</code> - Fingerprint image not found</li><li><code>ABIS-30012</code> - Face template not found</li><li><code>ABIS-30013</code> - Face image not found</li><li><code>ABIS-30015</code> - Iris template not found</li><li><code>ABIS-30016</code> - Iris image not found</li><li><code>ABIS-30017</code> - Hitlist not found</li><li><code>ABIS-30018</code> - Can't delete or reject an applicant in an active hitlist ${hitlistId}</li><li><code>ABIS-30019</code> - Cannot remove default applicant with external id ${externalId}, biometric individual ${biometricIndividualId} has other applicants under himself</li><li><code>ABIS-30020</code> - Can't reject deleted applicant</li><li><code>ABIS-30021</code> - Applicant with external id ${externalId} has no biometric individual.</li><li><code>ABIS-30022</code> - Biometric individual for applicant with external id ${externalId} has no applicants assigned.</li><li><code>ABIS-30023</code> - Applicant ${applicantId} is ${applicantStatus} and is a default applicant for individual ${biometricIndividualId}</li><li><code>ABIS-30024</code> - Applicant ${applicantId} is ${applicantStatus} and doesn't have any associated hitlists</li><li><code>ABIS-30025</code> - Non-primary applicant ${applicantId} cannot be single in it's individual ${biometricIndividualId}</li><li><code>ABIS-30026</code> - Applicant ${applicantId} is ${applicantStatus} and is not default</li><li><code>ABIS-30028</code> - Unable to update ${status}' applicant ${externalId}. Updating deleted and rejected applicants is not allowed</li><li><code>ABIS-30029</code> - Applicant with given external ID already exists</li><li><code>ABIS-30030</code> - Data service failed to perform ${operationName}. ${detail}</li><li><code>ABIS-30031</code> - Request for requestId ${requestId} was not found</li><li><code>ABIS-30032</code> - Response for requestId ${requestId} was not found</li><li><code>ABIS-30033</code> - Onboarding applicant with status ${status} is not allowed</li><li><code>ABIS-30034</code> - Onboarding applicant request should contain exactly one primary selfie</li><li><code>ABIS-30035</code> - Onboarding applicant request should not contain face templates</li><li><code>ABIS-30036</code> - Configuration not found</li><li><code>ABIS-30037</code> - Unknown AccurateSrvDetectMode ${mode} configured</li><li><code>ABIS-30038</code> - Unknown ModalityDedupType ${type} configured</li><li><code>ABIS-30039</code> - Unknown AdjudicatorOrder ${order} configured</li><li><code>ABIS-30040</code> - Onboarding applicant identify candidates do not exist</li><li><code>ABIS-30041</code> - Performing 'end of life' action for non-primary applicant is not allowed</li><li><code>ABIS-30042</code> - Performing 'end of life' action for applicant with status ${status} is not allowed</li><li><code>ABIS-30043</code> - Unknown DisplayInUi ${value} configured</li><li><code>ABIS-30045</code> - Unlicensed modality mask used in identification request. Modality [${modality}] needs [${neededLicenseType}] license, but has [${actualLicenseType}]</li><li><code>ABIS-30046</code> - Data service failed to perform matcher operation because of invalid operation arguments specified</li><li><code>ABIS-30047</code> - Performing 'end of life' action for applicant with its biometric individual figuring in active hitlist(s) is not allowed</li><li><code>ABIS-30048</code> - Cannot crop document portrait - some of its coordinates missing</li><li><code>ABIS-30049</code> - Cannot crop document portrait - specified portrait area not contained within document page image</li><li><code>ABIS-30053</code> - Requested onboarding applicant binary data not found. Please check if applicant and requested binary data exist.</li><li><code>ABIS-30054</code> - Unlicensed modality mask used in verification request. Modality [${modality}] needs [${neededLicenseType}] license, but has [${actualLicenseType}]</li><li><code>ABIS-30056</code> - Error when calling workflows API operation. Workflows api error code: ${errorCode}. Error message: ${errorMessage}</li><li><code>ABIS-30057</code> - Applicant with external ID '${externalId}' has no DNA data.</li><li><code>ABIS-30058</code> - Missing DNA data.</li><li><code>ABIS-30059</code> - Invalid DNA data.</li><li><code>ABIS-30060</code> - Some of the hitlists cannot be created.</li><li><code>ABIS-30063</code> - Matching result with id '${id}' not found.</li><li><code>ABIS-30064</code> - Cannot encode hitlist ${id} lock version</li><li><code>ABIS-30065</code> - Optimistic lock check failed.</li><li><code>ABIS-30066</code> - Probe individual has no primary applicant present or does not exist.</li><li><code>ABIS-30067</code> - Matching result with given external id not found.</li><li><code>ABIS-30068</code> - Signature not found</li><li><code>ABIS-30069</code> - Signature image not found</li><li><code>ABIS-30070</code> - Applicant action not found</li><li><code>ABIS-30071</code> - Dna not found</li><li><code>ABIS-30072</code> - Resolve queue action not found</li><li><code>ABIS-30073</code> - Unsupported type of resolve queue action</li><li><code>ABIS-30074</code> - Something went wrong while performing resolve queue action</li><li><code>ABIS-30075</code> - Code value not found</li><li><code>ABIS-30076</code> - Codelist not found</li><li><code>ABIS-30077</code> - Invalid target queue specified, target queue has to exist, be enabled and of type duplicate</li><li><code>ABIS-30078</code> - Probe primary applicant in invalid status</li><li><code>ABIS-30079</code> - `deduplicate` action is supported for `enrolled` applicants only</li><li><code>ABIS-30080</code> - Remove supported for capture phase applicants only</li><li><code>ABIS-30081</code> - Unsupported document portrait orientation value.</li></ul><p><code>ABIS-40xxx</code> - general configuration error </p><ul></ul><p><code>ABIS-41xxx</code> - application configuration error </p><ul><li><code>ABIS-41001</code> - Workflow mode is turned off. Deduplication is not allowed.</li><li><code>ABIS-41002</code> - Workflow mode is turned off. Biometric update is not allowed.</li><li><code>ABIS-41003</code> - S3 storage is disabled by user configuration.</li><li><code>ABIS-41004</code> - Unknown value [${value}] for configuration field [${name}].</li><li><code>ABIS-41005</code> - Clear applicants operation is not enabled.</li></ul><p><code>ABIS-42xxx</code> - license configuration error </p><ul><li><code>ABIS-42001</code> - License is needed to store face images</li><li><code>ABIS-42002</code> - Full or Hit only license is needed to store face templates</li><li><code>ABIS-42003</code> - License is needed to store fingerprint images</li><li><code>ABIS-42004</code> - Full or Hit only license is needed to store fingerprint templates</li><li><code>ABIS-42005</code> - License is needed to store iris images</li><li><code>ABIS-42006</code> - Full or Hit only license is needed to store iris templates</li><li><code>ABIS-42007</code> - Full face modality license is needed to onboard applicant</li><li><code>ABIS-42008</code> - Full or Hit only license is needed to extract face templates</li><li><code>ABIS-42009</code> - Full or Hit only license is needed to extract iris templates</li><li><code>ABIS-42010</code> - Full or Hit only license is needed to extract fingerprint templates</li></ul><p><code>ABIS-43xxx</code> - customization configuration error </p><ul><li><code>ABIS-43001</code> - Gallery '${name}' not found</li><li><code>ABIS-43002</code> - You are not allowed to define these applicant attributes: ${requestCustomDetails}</li><li><code>ABIS-43003</code> - No master code value found for body description code [${bodyDescriptionCode}]. Body description code value must have a master code value (body description class).</li><li><code>ABIS-43004</code> - No master code value found for SMT category code [${smtCategoryCode}]. SMT category code value must have a master code value (SMT type code value).</li><li><code>ABIS-43005</code> - No master code value found for SMT description tattoo subclass code [${smtDescriptionTattooSubclassCode}]. SMT description tattoo subclass code value must have a master code value (SMT description tattoo class).</li><li><code>ABIS-43006</code> - No code definition entry found for code list field ${fieldName}.</li><li><code>ABIS-43007</code> - Unknown body description class code [${bodyDescriptionClassCode}].</li><li><code>ABIS-43008</code> - Unknown body description code [${bodyDescriptionCode}].</li><li><code>ABIS-43009</code> - Body description code [${bodyDescriptionCode}] does not belong to body description class [${bodyDescriptionClassCode}].</li><li><code>ABIS-43010</code> - Unknown body description class code value: ${bodyDescriptionClass}</li><li><code>ABIS-43011</code> - Unknown body description code value: ${bodyDescriptionCode}</li><li><code>ABIS-43012</code> - Unknown color code value: ${colorCode}</li><li><code>ABIS-43013</code> - Unknown subject pose code value: ${subjectPoseCode}</li><li><code>ABIS-43014</code> - Unknown eye color code value: ${eyeColorCode}</li><li><code>ABIS-43015</code> - Unknown face description detail code value: ${faceDescriptionCode}</li><li><code>ABIS-43016</code> - Unknown hair color code value: ${hairColorCode}</li><li><code>ABIS-43017</code> - Unknown SMT type code value [${typeCode}].</li><li><code>ABIS-43018</code> - Unknown SMT code value [${smtCode}].</li><li><code>ABIS-43019</code> - Unknown SMT description category code [${smtDescriptionCategoryCode}].</li><li><code>ABIS-43020</code> - SMT category [${smtDescriptionCategoryCode}] does not belong to SMT type [${smtType}].</li><li><code>ABIS-43021</code> - Unknown SMT description tattoo class code [${smtDescriptionTattooClassCode}].</li><li><code>ABIS-43022</code> - SMT description tattoo subclass [${smtDescriptionTattooSubClassCode}] does not belong to SMT description tattoo class [${smtDescriptionTattooClassCode}].</li><li><code>ABIS-43023</code> - Unknown SMT description tattoo subclass code [${smtDescriptionTattooSubClassCode}].</li><li><code>ABIS-43024</code> - No code def for onboarding enum field [${type}] found.</li><li><code>ABIS-43025</code> - Unknown onboarding enum [${value}] of type [${type}].</li><li><code>ABIS-43026</code> - Primary enabled resolve queue configuration error. No or multiple primary enabled queues of the same queue type configured.</li><li><code>ABIS-43027</code> - Unknown subject pose code value [${code}].</li><li><code>ABIS-43028</code> - Failed to insert code value.</li></ul><p><code>ABIS-50xxx</code> - unavailable </p><ul><li><code>ABIS-50001</code> - Too many requests!</li><li><code>ABIS-50002</code> - Cannot process request, data-service refused to process request because of too many requests</li><li><code>ABIS-50003</code> - Cannot process request, fast-service refused to process request because of too many requests</li><li><code>ABIS-50004</code> - Cannot process request, download-service refused to process request because of too many requests</li><li><code>ABIS-50005</code> - Cannot process request, webafis refused to process request because of too many requests</li><li><code>ABIS-50006</code> - Cannot process request, matcher refused to process request because of too many requests</li><li><code>ABIS-50007</code> - Cannot process request, s3-storage refused to process request because of too many requests</li><li><code>ABIS-50008</code> - External storage not available.</li><li><code>ABIS-50009</code> - Database connection cannot be established, please retry request and/or check database settings</li><li><code>ABIS-50010</code> - Cannot process request, extractor refused to process request because of too many requests</li><li><code>ABIS-50011</code> - [${serviceName}] not available.</li><li><code>ABIS-50012</code> - [${serviceName}] not available: ${errorMessage}</li><li><code>ABIS-50013</code> - Cannot process request, database exception thrown during request status handling: ${errorMessage}</li><li><code>ABIS-50014</code> - Cannot process request, storage service refused to process request because of too many requests</li></ul>", alias="errorCode")
    error_details: Optional[Dict[str, Any]] = Field(default=None, description="The error detailed descriptions.", alias="errorDetails")
    error_message: Optional[StrictStr] = Field(default=None, description="The error message.", alias="errorMessage")
    response_url: Optional[StrictStr] = Field(default=None, description="The URL where the response can be obtained.", alias="responseUrl")
    __properties: ClassVar[List[str]] = ["errorCode", "errorDetails", "errorMessage", "responseUrl"]

    @field_validator('error_code')
    def error_code_validate_enum(cls, value):
        """Validates the enum"""
        if value not in ('ABIS-10001', 'ABIS-10002', 'ABIS-10003', 'ABIS-10005', 'ABIS-10006', 'ABIS-10012', 'ABIS-10013', 'ABIS-10014', 'ABIS-10015', 'ABIS-10016', 'ABIS-10017', 'ABIS-10018', 'ABIS-10022', 'ABIS-10023', 'ABIS-10025', 'ABIS-10026', 'ABIS-10028', 'ABIS-10029', 'ABIS-10030', 'ABIS-10031', 'ABIS-10032', 'ABIS-10033', 'ABIS-10034', 'ABIS-10035', 'ABIS-10036', 'ABIS-10037', 'ABIS-20001', 'ABIS-20002', 'ABIS-20003', 'ABIS-20004', 'ABIS-20005', 'ABIS-20006', 'ABIS-20007', 'ABIS-20008', 'ABIS-20009', 'ABIS-20010', 'ABIS-20011', 'ABIS-20012', 'ABIS-20013', 'ABIS-20014', 'ABIS-20015', 'ABIS-20016', 'ABIS-20017', 'ABIS-20018', 'ABIS-20019', 'ABIS-20020', 'ABIS-20021', 'ABIS-20022', 'ABIS-20023', 'ABIS-20024', 'ABIS-20025', 'ABIS-20026', 'ABIS-20027', 'ABIS-20028', 'ABIS-20029', 'ABIS-20030', 'ABIS-20031', 'ABIS-20034', 'ABIS-20035', 'ABIS-20036', 'ABIS-20037', 'ABIS-20038', 'ABIS-20039', 'ABIS-20040', 'ABIS-20041', 'ABIS-20042', 'ABIS-20043', 'ABIS-20044', 'ABIS-20045', 'ABIS-20046', 'ABIS-20047', 'ABIS-20048', 'ABIS-20049', 'ABIS-20050', 'ABIS-20051', 'ABIS-20052', 'ABIS-20053', 'ABIS-20054', 'ABIS-20055', 'ABIS-20056', 'ABIS-20057', 'ABIS-20058', 'ABIS-20059', 'ABIS-20060', 'ABIS-20061', 'ABIS-20062', 'ABIS-20063', 'ABIS-20064', 'ABIS-20065', 'ABIS-20066', 'ABIS-30001', 'ABIS-30002', 'ABIS-30003', 'ABIS-30004', 'ABIS-30005', 'ABIS-30006', 'ABIS-30008', 'ABIS-30009', 'ABIS-30010', 'ABIS-30012', 'ABIS-30013', 'ABIS-30015', 'ABIS-30016', 'ABIS-30017', 'ABIS-30018', 'ABIS-30019', 'ABIS-30020', 'ABIS-30021', 'ABIS-30022', 'ABIS-30023', 'ABIS-30024', 'ABIS-30025', 'ABIS-30026', 'ABIS-30028', 'ABIS-30029', 'ABIS-30030', 'ABIS-30031', 'ABIS-30032', 'ABIS-30033', 'ABIS-30034', 'ABIS-30035', 'ABIS-30036', 'ABIS-30037', 'ABIS-30038', 'ABIS-30039', 'ABIS-30040', 'ABIS-30041', 'ABIS-30042', 'ABIS-30043', 'ABIS-30045', 'ABIS-30046', 'ABIS-30047', 'ABIS-30048', 'ABIS-30049', 'ABIS-30053', 'ABIS-30054', 'ABIS-30056', 'ABIS-30057', 'ABIS-30058', 'ABIS-30059', 'ABIS-30060', 'ABIS-30061', 'ABIS-30063', 'ABIS-30064', 'ABIS-30065', 'ABIS-30066', 'ABIS-30067', 'ABIS-30068', 'ABIS-30069', 'ABIS-30070', 'ABIS-30071', 'ABIS-30072', 'ABIS-30073', 'ABIS-30074', 'ABIS-30075', 'ABIS-30076', 'ABIS-30077', 'ABIS-30078', 'ABIS-30079', 'ABIS-30080', 'ABIS-30081', 'ABIS-41001', 'ABIS-41002', 'ABIS-41003', 'ABIS-41004', 'ABIS-41005', 'ABIS-42001', 'ABIS-42002', 'ABIS-42003', 'ABIS-42004', 'ABIS-42005', 'ABIS-42006', 'ABIS-42007', 'ABIS-42008', 'ABIS-42009', 'ABIS-42010', 'ABIS-42011', 'ABIS-42012', 'ABIS-42013', 'ABIS-43001', 'ABIS-43002', 'ABIS-43003', 'ABIS-43004', 'ABIS-43005', 'ABIS-43006', 'ABIS-43007', 'ABIS-43008', 'ABIS-43009', 'ABIS-43010', 'ABIS-43011', 'ABIS-43012', 'ABIS-43013', 'ABIS-43014', 'ABIS-43015', 'ABIS-43016', 'ABIS-43017', 'ABIS-43018', 'ABIS-43019', 'ABIS-43020', 'ABIS-43021', 'ABIS-43022', 'ABIS-43023', 'ABIS-43024', 'ABIS-43025', 'ABIS-43026', 'ABIS-43027', 'ABIS-43028', 'ABIS-50001', 'ABIS-50002', 'ABIS-50003', 'ABIS-50004', 'ABIS-50005', 'ABIS-50006', 'ABIS-50007', 'ABIS-50008', 'ABIS-50009', 'ABIS-50010', 'ABIS-50011', 'ABIS-50012', 'ABIS-50013', 'ABIS-50014'):
            raise ValueError("must be one of enum values ('ABIS-10001', 'ABIS-10002', 'ABIS-10003', 'ABIS-10005', 'ABIS-10006', 'ABIS-10012', 'ABIS-10013', 'ABIS-10014', 'ABIS-10015', 'ABIS-10016', 'ABIS-10017', 'ABIS-10018', 'ABIS-10022', 'ABIS-10023', 'ABIS-10025', 'ABIS-10026', 'ABIS-10028', 'ABIS-10029', 'ABIS-10030', 'ABIS-10031', 'ABIS-10032', 'ABIS-10033', 'ABIS-10034', 'ABIS-10035', 'ABIS-10036', 'ABIS-10037', 'ABIS-20001', 'ABIS-20002', 'ABIS-20003', 'ABIS-20004', 'ABIS-20005', 'ABIS-20006', 'ABIS-20007', 'ABIS-20008', 'ABIS-20009', 'ABIS-20010', 'ABIS-20011', 'ABIS-20012', 'ABIS-20013', 'ABIS-20014', 'ABIS-20015', 'ABIS-20016', 'ABIS-20017', 'ABIS-20018', 'ABIS-20019', 'ABIS-20020', 'ABIS-20021', 'ABIS-20022', 'ABIS-20023', 'ABIS-20024', 'ABIS-20025', 'ABIS-20026', 'ABIS-20027', 'ABIS-20028', 'ABIS-20029', 'ABIS-20030', 'ABIS-20031', 'ABIS-20034', 'ABIS-20035', 'ABIS-20036', 'ABIS-20037', 'ABIS-20038', 'ABIS-20039', 'ABIS-20040', 'ABIS-20041', 'ABIS-20042', 'ABIS-20043', 'ABIS-20044', 'ABIS-20045', 'ABIS-20046', 'ABIS-20047', 'ABIS-20048', 'ABIS-20049', 'ABIS-20050', 'ABIS-20051', 'ABIS-20052', 'ABIS-20053', 'ABIS-20054', 'ABIS-20055', 'ABIS-20056', 'ABIS-20057', 'ABIS-20058', 'ABIS-20059', 'ABIS-20060', 'ABIS-20061', 'ABIS-20062', 'ABIS-20063', 'ABIS-20064', 'ABIS-20065', 'ABIS-20066', 'ABIS-30001', 'ABIS-30002', 'ABIS-30003', 'ABIS-30004', 'ABIS-30005', 'ABIS-30006', 'ABIS-30008', 'ABIS-30009', 'ABIS-30010', 'ABIS-30012', 'ABIS-30013', 'ABIS-30015', 'ABIS-30016', 'ABIS-30017', 'ABIS-30018', 'ABIS-30019', 'ABIS-30020', 'ABIS-30021', 'ABIS-30022', 'ABIS-30023', 'ABIS-30024', 'ABIS-30025', 'ABIS-30026', 'ABIS-30028', 'ABIS-30029', 'ABIS-30030', 'ABIS-30031', 'ABIS-30032', 'ABIS-30033', 'ABIS-30034', 'ABIS-30035', 'ABIS-30036', 'ABIS-30037', 'ABIS-30038', 'ABIS-30039', 'ABIS-30040', 'ABIS-30041', 'ABIS-30042', 'ABIS-30043', 'ABIS-30045', 'ABIS-30046', 'ABIS-30047', 'ABIS-30048', 'ABIS-30049', 'ABIS-30053', 'ABIS-30054', 'ABIS-30056', 'ABIS-30057', 'ABIS-30058', 'ABIS-30059', 'ABIS-30060', 'ABIS-30061', 'ABIS-30063', 'ABIS-30064', 'ABIS-30065', 'ABIS-30066', 'ABIS-30067', 'ABIS-30068', 'ABIS-30069', 'ABIS-30070', 'ABIS-30071', 'ABIS-30072', 'ABIS-30073', 'ABIS-30074', 'ABIS-30075', 'ABIS-30076', 'ABIS-30077', 'ABIS-30078', 'ABIS-30079', 'ABIS-30080', 'ABIS-30081', 'ABIS-41001', 'ABIS-41002', 'ABIS-41003', 'ABIS-41004', 'ABIS-41005', 'ABIS-42001', 'ABIS-42002', 'ABIS-42003', 'ABIS-42004', 'ABIS-42005', 'ABIS-42006', 'ABIS-42007', 'ABIS-42008', 'ABIS-42009', 'ABIS-42010', 'ABIS-42011', 'ABIS-42012', 'ABIS-42013', 'ABIS-43001', 'ABIS-43002', 'ABIS-43003', 'ABIS-43004', 'ABIS-43005', 'ABIS-43006', 'ABIS-43007', 'ABIS-43008', 'ABIS-43009', 'ABIS-43010', 'ABIS-43011', 'ABIS-43012', 'ABIS-43013', 'ABIS-43014', 'ABIS-43015', 'ABIS-43016', 'ABIS-43017', 'ABIS-43018', 'ABIS-43019', 'ABIS-43020', 'ABIS-43021', 'ABIS-43022', 'ABIS-43023', 'ABIS-43024', 'ABIS-43025', 'ABIS-43026', 'ABIS-43027', 'ABIS-43028', 'ABIS-50001', 'ABIS-50002', 'ABIS-50003', 'ABIS-50004', 'ABIS-50005', 'ABIS-50006', 'ABIS-50007', 'ABIS-50008', 'ABIS-50009', 'ABIS-50010', 'ABIS-50011', 'ABIS-50012', 'ABIS-50013', 'ABIS-50014')")
        return value

    model_config = {
        "populate_by_name": True,
        "validate_assignment": True,
        "protected_namespaces": (),
    }


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of ErrorResponseStandard from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        _dict = self.model_dump(
            by_alias=True,
            exclude={
            },
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Dict) -> Self:
        """Create an instance of ErrorResponseStandard from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "errorCode": obj.get("errorCode"),
            "errorDetails": obj.get("errorDetails"),
            "errorMessage": obj.get("errorMessage"),
            "responseUrl": obj.get("responseUrl")
        })
        return _obj


