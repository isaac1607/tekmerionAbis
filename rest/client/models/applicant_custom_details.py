# coding: utf-8

"""
    ABIS REST API

    Innovatrics ABIS proprietary REST API

    The version of the OpenAPI document: 6.62.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import date, datetime
from typing import Any, ClassVar, Dict, List, Optional
from pydantic import BaseModel, StrictBool, StrictInt, StrictStr
from pydantic import Field
try:
    from typing import Self
except ImportError:
    from typing_extensions import Self

class ApplicantCustomDetails(BaseModel):
    """
    ApplicantCustomDetails
    """ # noqa: E501
    address: Optional[StrictStr] = None
    address_country: Optional[StrictStr] = Field(default=None, alias="addressCountry")
    address_place: Optional[StrictStr] = Field(default=None, alias="addressPlace")
    age: Optional[StrictInt] = None
    alias_list: Optional[List[str]] = Field(default=None, alias="aliasList")
    arrest_offense_literal: Optional[StrictStr] = Field(default=None, alias="arrestOffenseLiteral")
    blood_type: Optional[StrictStr] = Field(default=None, alias="bloodType")
    can: Optional[StrictStr] = None
    chairman: Optional[StrictStr] = None
    citizenship: Optional[StrictStr] = None
    citizenship_status: Optional[StrictStr] = Field(default=None, alias="citizenshipStatus")
    city: Optional[StrictStr] = None
    civil_status: Optional[StrictStr] = Field(default=None, alias="civilStatus")
    commercial_telegraphic_code: Optional[StrictStr] = Field(default=None, alias="commercialTelegraphicCode")
    conditions: Optional[StrictStr] = None
    controlling_agency_id: Optional[StrictStr] = Field(default=None, alias="controllingAgencyId")
    corpulence: Optional[StrictStr] = None
    country_code: Optional[StrictStr] = Field(default=None, alias="countryCode")
    criminal_reference_number: Optional[StrictStr] = Field(default=None, alias="criminalReferenceNumber")
    date_and_place_of_birth: Optional[StrictStr] = Field(default=None, alias="dateAndPlaceOfBirth")
    date_and_place_of_issue: Optional[StrictStr] = Field(default=None, alias="dateAndPlaceOfIssue")
    date_of_arrest: Optional[date] = Field(default=None, description="A date without a time-zone in the ISO-8601 calendar system, such as 2012-11-12", alias="dateOfArrest")
    date_of_arrest_suffix: Optional[StrictStr] = Field(default=None, alias="dateOfArrestSuffix")
    date_of_birth: Optional[date] = Field(default=None, description="A date without a time-zone in the ISO-8601 calendar system, such as 2012-11-12", alias="dateOfBirth")
    date_of_birth_national_language: Optional[StrictStr] = Field(default=None, alias="dateOfBirthNationalLanguage")
    date_of_birth_text_list: Optional[List[str]] = Field(default=None, description="List of dates of births as string to support invalid or partial dates", alias="dateOfBirthTextList")
    date_of_expiry: Optional[date] = Field(default=None, description="A date without a time-zone in the ISO-8601 calendar system, such as 2012-11-12", alias="dateOfExpiry")
    date_of_expiry_national_language: Optional[StrictStr] = Field(default=None, alias="dateOfExpiryNationalLanguage")
    date_of_issue: Optional[date] = Field(default=None, description="A date without a time-zone in the ISO-8601 calendar system, such as 2012-11-12", alias="dateOfIssue")
    date_of_issue_national_language: Optional[StrictStr] = Field(default=None, alias="dateOfIssueNationalLanguage")
    date_of_modification: Optional[datetime] = Field(default=None, description="A date-time format in the ISO-8601 calendar system", alias="dateOfModification")
    date_of_offence: Optional[date] = Field(default=None, description="A date without a time-zone in the ISO-8601 calendar system, such as 2012-11-12", alias="dateOfOffence")
    day_of_birth: Optional[StrictInt] = Field(default=None, alias="dayOfBirth")
    district: Optional[StrictStr] = None
    division: Optional[StrictStr] = None
    document_issued_by: Optional[StrictStr] = Field(default=None, alias="documentIssuedBy")
    document_number: Optional[StrictStr] = Field(default=None, alias="documentNumber")
    document_type: Optional[StrictStr] = Field(default=None, alias="documentType")
    document_type_code: Optional[StrictStr] = Field(default=None, alias="documentTypeCode")
    document_type_national_language: Optional[StrictStr] = Field(default=None, alias="documentTypeNationalLanguage")
    donor: Optional[StrictStr] = None
    driving_categories: Optional[StrictStr] = Field(default=None, alias="drivingCategories")
    driving_categories_national_language: Optional[StrictStr] = Field(default=None, alias="drivingCategoriesNationalLanguage")
    education: Optional[StrictStr] = None
    email: Optional[StrictStr] = None
    emergency_address: Optional[StrictStr] = Field(default=None, alias="emergencyAddress")
    emergency_name: Optional[StrictStr] = Field(default=None, alias="emergencyName")
    emergency_phone_number: Optional[StrictStr] = Field(default=None, alias="emergencyPhoneNumber")
    employer: Optional[StrictStr] = None
    encounter_mission_type: Optional[StrictStr] = Field(default=None, alias="encounterMissionType")
    estimated_date: Optional[StrictBool] = Field(default=None, alias="estimatedDate")
    ethnic_type: Optional[StrictStr] = Field(default=None, alias="ethnicType")
    eyes_color: Optional[StrictStr] = Field(default=None, alias="eyesColor")
    eyes_color_cl: Optional[StrictStr] = Field(default=None, alias="eyesColorCl")
    face_features: Optional[StrictStr] = Field(default=None, alias="faceFeatures")
    face_marks: Optional[StrictStr] = Field(default=None, alias="faceMarks")
    fathers_name: Optional[StrictStr] = Field(default=None, alias="fathersName")
    fathers_name_national_language: Optional[StrictStr] = Field(default=None, alias="fathersNameNationalLanguage")
    fin: Optional[StrictStr] = None
    fin_list: Optional[List[str]] = Field(default=None, alias="finList")
    fp_classification_left: Optional[StrictStr] = Field(default=None, alias="fpClassificationLeft")
    fp_classification_right: Optional[StrictStr] = Field(default=None, alias="fpClassificationRight")
    full_name: Optional[StrictStr] = Field(default=None, alias="fullName")
    full_name_national_language: Optional[StrictStr] = Field(default=None, alias="fullNameNationalLanguage")
    generic_id: Optional[StrictStr] = Field(default=None, alias="genericId")
    given_names: Optional[StrictStr] = Field(default=None, alias="givenNames")
    given_names_national_language: Optional[StrictStr] = Field(default=None, alias="givenNamesNationalLanguage")
    hair_color: Optional[StrictStr] = Field(default=None, alias="hairColor")
    hair_color_cl: Optional[StrictStr] = Field(default=None, alias="hairColorCl")
    health_number: Optional[StrictStr] = Field(default=None, alias="healthNumber")
    height: Optional[StrictInt] = None
    image_capture_equipment_make: Optional[StrictStr] = Field(default=None, alias="imageCaptureEquipmentMake")
    image_capture_equipment_model: Optional[StrictStr] = Field(default=None, alias="imageCaptureEquipmentModel")
    image_capture_equipment_serial_number: Optional[StrictStr] = Field(default=None, alias="imageCaptureEquipmentSerialNumber")
    immigration_status: Optional[StrictStr] = Field(default=None, alias="immigrationStatus")
    issuing_authority: Optional[StrictStr] = Field(default=None, alias="issuingAuthority")
    job: Optional[StrictStr] = None
    licence_date: Optional[date] = Field(default=None, description="A date without a time-zone in the ISO-8601 calendar system, such as 2012-11-12", alias="licenceDate")
    licence_version: Optional[StrictStr] = Field(default=None, alias="licenceVersion")
    license_number: Optional[StrictStr] = Field(default=None, alias="licenseNumber")
    limbs_marks: Optional[StrictStr] = Field(default=None, alias="limbsMarks")
    literate: Optional[StrictBool] = None
    location: Optional[StrictStr] = None
    lock_version: Optional[StrictStr] = Field(default=None, alias="lockVersion")
    machine_readable_zone: Optional[StrictStr] = Field(default=None, alias="machineReadableZone")
    maiden_name: Optional[StrictStr] = Field(default=None, alias="maidenName")
    middle_name: Optional[StrictStr] = Field(default=None, alias="middleName")
    military_code: Optional[StrictStr] = Field(default=None, alias="militaryCode")
    modification: Optional[StrictStr] = None
    month_of_birth: Optional[StrictInt] = Field(default=None, alias="monthOfBirth")
    mothers_name: Optional[StrictStr] = Field(default=None, alias="mothersName")
    mothers_name_national_language: Optional[StrictStr] = Field(default=None, alias="mothersNameNationalLanguage")
    mothers_surname_at_birth: Optional[StrictStr] = Field(default=None, alias="mothersSurnameAtBirth")
    municipality: Optional[StrictStr] = None
    name_and_surname_of_kids: Optional[StrictStr] = Field(default=None, alias="nameAndSurnameOfKids")
    name_and_surname_of_spouse: Optional[StrictStr] = Field(default=None, alias="nameAndSurnameOfSpouse")
    national_id: Optional[StrictStr] = Field(default=None, alias="nationalId")
    nationality: Optional[StrictStr] = None
    nationality_free_text: Optional[StrictStr] = Field(default=None, alias="nationalityFreeText")
    nationality_list: Optional[List[str]] = Field(default=None, alias="nationalityList")
    nationality_national_language: Optional[StrictStr] = Field(default=None, alias="nationalityNationalLanguage")
    nickname: Optional[StrictStr] = None
    notes: Optional[StrictStr] = None
    notes_national_language: Optional[StrictStr] = Field(default=None, alias="notesNationalLanguage")
    observations: Optional[StrictStr] = None
    occupation: Optional[StrictStr] = None
    organ_donation: Optional[StrictStr] = Field(default=None, alias="organDonation")
    ori: Optional[StrictStr] = None
    other_features: Optional[StrictStr] = Field(default=None, alias="otherFeatures")
    other_id_list: Optional[List[str]] = Field(default=None, alias="otherIdList")
    owning_bureau: Optional[StrictStr] = Field(default=None, alias="owningBureau")
    parent_names: Optional[StrictStr] = Field(default=None, alias="parentNames")
    parents_given_names: Optional[StrictStr] = Field(default=None, alias="parentsGivenNames")
    passport_number: Optional[StrictStr] = Field(default=None, alias="passportNumber")
    person_category_code: Optional[StrictStr] = Field(default=None, alias="personCategoryCode")
    personal_number: Optional[StrictStr] = Field(default=None, alias="personalNumber")
    personal_number_national_language: Optional[StrictStr] = Field(default=None, alias="personalNumberNationalLanguage")
    personal_number_of_kids: Optional[StrictStr] = Field(default=None, alias="personalNumberOfKids")
    personal_number_of_spouse: Optional[StrictStr] = Field(default=None, alias="personalNumberOfSpouse")
    phone_number: Optional[StrictStr] = Field(default=None, alias="phoneNumber")
    place_of_arrest: Optional[StrictStr] = Field(default=None, alias="placeOfArrest")
    place_of_birth: Optional[StrictStr] = Field(default=None, alias="placeOfBirth")
    place_of_birth_list: Optional[List[str]] = Field(default=None, alias="placeOfBirthList")
    place_of_birth_national_language: Optional[StrictStr] = Field(default=None, alias="placeOfBirthNationalLanguage")
    place_of_issue: Optional[StrictStr] = Field(default=None, alias="placeOfIssue")
    postmaster: Optional[StrictStr] = None
    procedure: Optional[StrictStr] = None
    profession: Optional[StrictStr] = Field(default=None, description="Profession as code list value")
    profession_free_text: Optional[StrictStr] = Field(default=None, description="Profession as arbitrary text", alias="professionFreeText")
    profession_national_language: Optional[StrictStr] = Field(default=None, alias="professionNationalLanguage")
    province: Optional[StrictStr] = None
    province_of_birth: Optional[StrictStr] = Field(default=None, alias="provinceOfBirth")
    race: Optional[StrictStr] = None
    race_ext_list: Optional[List[str]] = Field(default=None, alias="raceExtList")
    racial_characteristic: Optional[StrictStr] = Field(default=None, alias="racialCharacteristic")
    reason_fingerprinted: Optional[StrictStr] = Field(default=None, alias="reasonFingerprinted")
    recorded_at: Optional[StrictStr] = Field(default=None, alias="recordedAt")
    recorded_by: Optional[StrictStr] = Field(default=None, alias="recordedBy")
    recorded_on: Optional[date] = Field(default=None, description="A date without a time-zone in the ISO-8601 calendar system, such as 2012-11-12", alias="recordedOn")
    reference_id: Optional[StrictStr] = Field(default=None, alias="referenceId")
    region: Optional[StrictStr] = None
    registration_type: Optional[StrictStr] = Field(default=None, alias="registrationType")
    religion: Optional[StrictStr] = None
    remarks: Optional[StrictStr] = None
    report_reason: Optional[StrictStr] = Field(default=None, alias="reportReason")
    request_for_electronic_rap_sheet: Optional[StrictStr] = Field(default=None, alias="requestForElectronicRapSheet")
    residence_of_person: Optional[StrictStr] = Field(default=None, alias="residenceOfPerson")
    restrictions: Optional[StrictStr] = None
    retention_code: Optional[StrictStr] = Field(default=None, alias="retentionCode")
    second_surname: Optional[StrictStr] = Field(default=None, alias="secondSurname")
    section: Optional[StrictStr] = None
    security_number: Optional[StrictStr] = Field(default=None, alias="securityNumber")
    sex: Optional[StrictStr] = None
    sex_free_text: Optional[StrictStr] = Field(default=None, alias="sexFreeText")
    sex_national_language: Optional[StrictStr] = Field(default=None, alias="sexNationalLanguage")
    snapshot: Optional[StrictStr] = None
    social_security_number: Optional[StrictStr] = Field(default=None, alias="socialSecurityNumber")
    source_system: Optional[StrictStr] = Field(default=None, alias="sourceSystem")
    spass_number: Optional[StrictStr] = Field(default=None, alias="spassNumber")
    special_needs: Optional[StrictStr] = Field(default=None, alias="specialNeeds")
    state: Optional[StrictStr] = None
    surname: Optional[StrictStr] = None
    surname_at_birth: Optional[StrictStr] = Field(default=None, alias="surnameAtBirth")
    surname_national_language: Optional[StrictStr] = Field(default=None, alias="surnameNationalLanguage")
    system_id: Optional[StrictStr] = Field(default=None, alias="systemId")
    tax_no: Optional[StrictStr] = Field(default=None, alias="taxNo")
    title: Optional[StrictStr] = None
    torso_marks: Optional[StrictStr] = Field(default=None, alias="torsoMarks")
    transaction_number: Optional[StrictStr] = Field(default=None, alias="transactionNumber")
    transaction_type: Optional[StrictStr] = Field(default=None, alias="transactionType")
    update_type: Optional[StrictStr] = Field(default=None, alias="updateType")
    voice: Optional[StrictStr] = None
    weight: Optional[StrictInt] = None
    work_permit_number: Optional[StrictStr] = Field(default=None, alias="workPermitNumber")
    year_of_birth: Optional[StrictInt] = Field(default=None, alias="yearOfBirth")
    __properties: ClassVar[List[str]] = ["address", "addressCountry", "addressPlace", "age", "aliasList", "arrestOffenseLiteral", "bloodType", "can", "chairman", "citizenship", "citizenshipStatus", "city", "civilStatus", "commercialTelegraphicCode", "conditions", "controllingAgencyId", "corpulence", "countryCode", "criminalReferenceNumber", "dateAndPlaceOfBirth", "dateAndPlaceOfIssue", "dateOfArrest", "dateOfArrestSuffix", "dateOfBirth", "dateOfBirthNationalLanguage", "dateOfBirthTextList", "dateOfExpiry", "dateOfExpiryNationalLanguage", "dateOfIssue", "dateOfIssueNationalLanguage", "dateOfModification", "dateOfOffence", "dayOfBirth", "district", "division", "documentIssuedBy", "documentNumber", "documentType", "documentTypeCode", "documentTypeNationalLanguage", "donor", "drivingCategories", "drivingCategoriesNationalLanguage", "education", "email", "emergencyAddress", "emergencyName", "emergencyPhoneNumber", "employer", "encounterMissionType", "estimatedDate", "ethnicType", "eyesColor", "eyesColorCl", "faceFeatures", "faceMarks", "fathersName", "fathersNameNationalLanguage", "fin", "finList", "fpClassificationLeft", "fpClassificationRight", "fullName", "fullNameNationalLanguage", "genericId", "givenNames", "givenNamesNationalLanguage", "hairColor", "hairColorCl", "healthNumber", "height", "imageCaptureEquipmentMake", "imageCaptureEquipmentModel", "imageCaptureEquipmentSerialNumber", "immigrationStatus", "issuingAuthority", "job", "licenceDate", "licenceVersion", "licenseNumber", "limbsMarks", "literate", "location", "lockVersion", "machineReadableZone", "maidenName", "middleName", "militaryCode", "modification", "monthOfBirth", "mothersName", "mothersNameNationalLanguage", "mothersSurnameAtBirth", "municipality", "nameAndSurnameOfKids", "nameAndSurnameOfSpouse", "nationalId", "nationality", "nationalityFreeText", "nationalityList", "nationalityNationalLanguage", "nickname", "notes", "notesNationalLanguage", "observations", "occupation", "organDonation", "ori", "otherFeatures", "otherIdList", "owningBureau", "parentNames", "parentsGivenNames", "passportNumber", "personCategoryCode", "personalNumber", "personalNumberNationalLanguage", "personalNumberOfKids", "personalNumberOfSpouse", "phoneNumber", "placeOfArrest", "placeOfBirth", "placeOfBirthList", "placeOfBirthNationalLanguage", "placeOfIssue", "postmaster", "procedure", "profession", "professionFreeText", "professionNationalLanguage", "province", "provinceOfBirth", "race", "raceExtList", "racialCharacteristic", "reasonFingerprinted", "recordedAt", "recordedBy", "recordedOn", "referenceId", "region", "registrationType", "religion", "remarks", "reportReason", "requestForElectronicRapSheet", "residenceOfPerson", "restrictions", "retentionCode", "secondSurname", "section", "securityNumber", "sex", "sexFreeText", "sexNationalLanguage", "snapshot", "socialSecurityNumber", "sourceSystem", "spassNumber", "specialNeeds", "state", "surname", "surnameAtBirth", "surnameNationalLanguage", "systemId", "taxNo", "title", "torsoMarks", "transactionNumber", "transactionType", "updateType", "voice", "weight", "workPermitNumber", "yearOfBirth"]

    model_config = {
        "populate_by_name": True,
        "validate_assignment": True,
        "protected_namespaces": (),
    }


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of ApplicantCustomDetails from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        _dict = self.model_dump(
            by_alias=True,
            exclude={
            },
            exclude_none=True,
        )
        # set to None if estimated_date (nullable) is None
        # and model_fields_set contains the field
        if self.estimated_date is None and "estimated_date" in self.model_fields_set:
            _dict['estimatedDate'] = None

        # set to None if literate (nullable) is None
        # and model_fields_set contains the field
        if self.literate is None and "literate" in self.model_fields_set:
            _dict['literate'] = None

        return _dict

    @classmethod
    def from_dict(cls, obj: Dict) -> Self:
        """Create an instance of ApplicantCustomDetails from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "address": obj.get("address"),
            "addressCountry": obj.get("addressCountry"),
            "addressPlace": obj.get("addressPlace"),
            "age": obj.get("age"),
            "arrestOffenseLiteral": obj.get("arrestOffenseLiteral"),
            "bloodType": obj.get("bloodType"),
            "can": obj.get("can"),
            "chairman": obj.get("chairman"),
            "citizenship": obj.get("citizenship"),
            "citizenshipStatus": obj.get("citizenshipStatus"),
            "city": obj.get("city"),
            "civilStatus": obj.get("civilStatus"),
            "commercialTelegraphicCode": obj.get("commercialTelegraphicCode"),
            "conditions": obj.get("conditions"),
            "controllingAgencyId": obj.get("controllingAgencyId"),
            "corpulence": obj.get("corpulence"),
            "countryCode": obj.get("countryCode"),
            "criminalReferenceNumber": obj.get("criminalReferenceNumber"),
            "dateAndPlaceOfBirth": obj.get("dateAndPlaceOfBirth"),
            "dateAndPlaceOfIssue": obj.get("dateAndPlaceOfIssue"),
            "dateOfArrest": obj.get("dateOfArrest"),
            "dateOfArrestSuffix": obj.get("dateOfArrestSuffix"),
            "dateOfBirth": obj.get("dateOfBirth"),
            "dateOfBirthNationalLanguage": obj.get("dateOfBirthNationalLanguage"),
            "dateOfExpiry": obj.get("dateOfExpiry"),
            "dateOfExpiryNationalLanguage": obj.get("dateOfExpiryNationalLanguage"),
            "dateOfIssue": obj.get("dateOfIssue"),
            "dateOfIssueNationalLanguage": obj.get("dateOfIssueNationalLanguage"),
            "dateOfModification": obj.get("dateOfModification"),
            "dateOfOffence": obj.get("dateOfOffence"),
            "dayOfBirth": obj.get("dayOfBirth"),
            "district": obj.get("district"),
            "division": obj.get("division"),
            "documentIssuedBy": obj.get("documentIssuedBy"),
            "documentNumber": obj.get("documentNumber"),
            "documentType": obj.get("documentType"),
            "documentTypeCode": obj.get("documentTypeCode"),
            "documentTypeNationalLanguage": obj.get("documentTypeNationalLanguage"),
            "donor": obj.get("donor"),
            "drivingCategories": obj.get("drivingCategories"),
            "drivingCategoriesNationalLanguage": obj.get("drivingCategoriesNationalLanguage"),
            "education": obj.get("education"),
            "email": obj.get("email"),
            "emergencyAddress": obj.get("emergencyAddress"),
            "emergencyName": obj.get("emergencyName"),
            "emergencyPhoneNumber": obj.get("emergencyPhoneNumber"),
            "employer": obj.get("employer"),
            "encounterMissionType": obj.get("encounterMissionType"),
            "estimatedDate": obj.get("estimatedDate"),
            "ethnicType": obj.get("ethnicType"),
            "eyesColor": obj.get("eyesColor"),
            "eyesColorCl": obj.get("eyesColorCl"),
            "faceFeatures": obj.get("faceFeatures"),
            "faceMarks": obj.get("faceMarks"),
            "fathersName": obj.get("fathersName"),
            "fathersNameNationalLanguage": obj.get("fathersNameNationalLanguage"),
            "fin": obj.get("fin"),
            "fpClassificationLeft": obj.get("fpClassificationLeft"),
            "fpClassificationRight": obj.get("fpClassificationRight"),
            "fullName": obj.get("fullName"),
            "fullNameNationalLanguage": obj.get("fullNameNationalLanguage"),
            "genericId": obj.get("genericId"),
            "givenNames": obj.get("givenNames"),
            "givenNamesNationalLanguage": obj.get("givenNamesNationalLanguage"),
            "hairColor": obj.get("hairColor"),
            "hairColorCl": obj.get("hairColorCl"),
            "healthNumber": obj.get("healthNumber"),
            "height": obj.get("height"),
            "imageCaptureEquipmentMake": obj.get("imageCaptureEquipmentMake"),
            "imageCaptureEquipmentModel": obj.get("imageCaptureEquipmentModel"),
            "imageCaptureEquipmentSerialNumber": obj.get("imageCaptureEquipmentSerialNumber"),
            "immigrationStatus": obj.get("immigrationStatus"),
            "issuingAuthority": obj.get("issuingAuthority"),
            "job": obj.get("job"),
            "licenceDate": obj.get("licenceDate"),
            "licenceVersion": obj.get("licenceVersion"),
            "licenseNumber": obj.get("licenseNumber"),
            "limbsMarks": obj.get("limbsMarks"),
            "literate": obj.get("literate"),
            "location": obj.get("location"),
            "lockVersion": obj.get("lockVersion"),
            "machineReadableZone": obj.get("machineReadableZone"),
            "maidenName": obj.get("maidenName"),
            "middleName": obj.get("middleName"),
            "militaryCode": obj.get("militaryCode"),
            "modification": obj.get("modification"),
            "monthOfBirth": obj.get("monthOfBirth"),
            "mothersName": obj.get("mothersName"),
            "mothersNameNationalLanguage": obj.get("mothersNameNationalLanguage"),
            "mothersSurnameAtBirth": obj.get("mothersSurnameAtBirth"),
            "municipality": obj.get("municipality"),
            "nameAndSurnameOfKids": obj.get("nameAndSurnameOfKids"),
            "nameAndSurnameOfSpouse": obj.get("nameAndSurnameOfSpouse"),
            "nationalId": obj.get("nationalId"),
            "nationality": obj.get("nationality"),
            "nationalityFreeText": obj.get("nationalityFreeText"),
            "nationalityNationalLanguage": obj.get("nationalityNationalLanguage"),
            "nickname": obj.get("nickname"),
            "notes": obj.get("notes"),
            "notesNationalLanguage": obj.get("notesNationalLanguage"),
            "observations": obj.get("observations"),
            "occupation": obj.get("occupation"),
            "organDonation": obj.get("organDonation"),
            "ori": obj.get("ori"),
            "otherFeatures": obj.get("otherFeatures"),
            "owningBureau": obj.get("owningBureau"),
            "parentNames": obj.get("parentNames"),
            "parentsGivenNames": obj.get("parentsGivenNames"),
            "passportNumber": obj.get("passportNumber"),
            "personCategoryCode": obj.get("personCategoryCode"),
            "personalNumber": obj.get("personalNumber"),
            "personalNumberNationalLanguage": obj.get("personalNumberNationalLanguage"),
            "personalNumberOfKids": obj.get("personalNumberOfKids"),
            "personalNumberOfSpouse": obj.get("personalNumberOfSpouse"),
            "phoneNumber": obj.get("phoneNumber"),
            "placeOfArrest": obj.get("placeOfArrest"),
            "placeOfBirth": obj.get("placeOfBirth"),
            "placeOfBirthNationalLanguage": obj.get("placeOfBirthNationalLanguage"),
            "placeOfIssue": obj.get("placeOfIssue"),
            "postmaster": obj.get("postmaster"),
            "procedure": obj.get("procedure"),
            "profession": obj.get("profession"),
            "professionFreeText": obj.get("professionFreeText"),
            "professionNationalLanguage": obj.get("professionNationalLanguage"),
            "province": obj.get("province"),
            "provinceOfBirth": obj.get("provinceOfBirth"),
            "race": obj.get("race"),
            "racialCharacteristic": obj.get("racialCharacteristic"),
            "reasonFingerprinted": obj.get("reasonFingerprinted"),
            "recordedAt": obj.get("recordedAt"),
            "recordedBy": obj.get("recordedBy"),
            "recordedOn": obj.get("recordedOn"),
            "referenceId": obj.get("referenceId"),
            "region": obj.get("region"),
            "registrationType": obj.get("registrationType"),
            "religion": obj.get("religion"),
            "remarks": obj.get("remarks"),
            "reportReason": obj.get("reportReason"),
            "requestForElectronicRapSheet": obj.get("requestForElectronicRapSheet"),
            "residenceOfPerson": obj.get("residenceOfPerson"),
            "restrictions": obj.get("restrictions"),
            "retentionCode": obj.get("retentionCode"),
            "secondSurname": obj.get("secondSurname"),
            "section": obj.get("section"),
            "securityNumber": obj.get("securityNumber"),
            "sex": obj.get("sex"),
            "sexFreeText": obj.get("sexFreeText"),
            "sexNationalLanguage": obj.get("sexNationalLanguage"),
            "snapshot": obj.get("snapshot"),
            "socialSecurityNumber": obj.get("socialSecurityNumber"),
            "sourceSystem": obj.get("sourceSystem"),
            "spassNumber": obj.get("spassNumber"),
            "specialNeeds": obj.get("specialNeeds"),
            "state": obj.get("state"),
            "surname": obj.get("surname"),
            "surnameAtBirth": obj.get("surnameAtBirth"),
            "surnameNationalLanguage": obj.get("surnameNationalLanguage"),
            "systemId": obj.get("systemId"),
            "taxNo": obj.get("taxNo"),
            "title": obj.get("title"),
            "torsoMarks": obj.get("torsoMarks"),
            "transactionNumber": obj.get("transactionNumber"),
            "transactionType": obj.get("transactionType"),
            "updateType": obj.get("updateType"),
            "voice": obj.get("voice"),
            "weight": obj.get("weight"),
            "workPermitNumber": obj.get("workPermitNumber"),
            "yearOfBirth": obj.get("yearOfBirth")
        })
        return _obj


